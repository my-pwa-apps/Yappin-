/**
 * LAYOUT.CSS
 * Page Layout, Grid System, Containers, and Responsive Structure
 * 
 * This file contains:
 * - Main app layout structure
 * - Container and wrapper styles
 * - Sidebar and main content areas
 * - Responsive breakpoints for layout
 */

/* ========================================
   MAIN APP LAYOUT
   ======================================== */

/* NOTE: App container layout is defined in style.css
   This file provides additional layout utilities and responsive helpers
   without overriding existing structure */

/* ========================================
   CONTAINERS & WRAPPERS
   ======================================== */

.container {
    width: 100%;
    max-width: var(--container-max-width);
    margin: 0 auto;
    padding: 0 var(--space-lg);
}

.content-wrapper {
    padding: var(--space-lg);
}

.section {
    margin-bottom: var(--space-xl);
}

/* ========================================
   HEADER
   ======================================== */

/* NOTE: Header styles are defined in style.css
   This section is for future header enhancements only */

/* ========================================
   MOBILE NAVIGATION
   ======================================== */

/* NOTE: Mobile navigation styles are defined in style.css
   This section is for future mobile nav enhancements only */

/* ========================================
   FLOATING COMPOSE BUTTON (MOBILE)
   ======================================== */

/* NOTE: Mobile compose button styles are defined in style.css
   This section is for future enhancements only */

/* ========================================
   RESPONSIVE LAYOUT
   ======================================== */

/* NOTE: Main responsive layout is handled in style.css
   This file provides supplementary responsive utilities only */

/* ========================================
   GRID SYSTEM
   ======================================== */

.grid {
    display: grid;
    gap: var(--space-lg);
}

.grid-2 {
    grid-template-columns: repeat(2, 1fr);
}

.grid-3 {
    grid-template-columns: repeat(3, 1fr);
}

.grid-4 {
    grid-template-columns: repeat(4, 1fr);
}

@media (max-width: 992px) {
    .grid-4 {
        grid-template-columns: repeat(3, 1fr);
    }
}

@media (max-width: 768px) {
    .grid-3,
    .grid-4 {
        grid-template-columns: repeat(2, 1fr);
    }
}

@media (max-width: 480px) {
    .grid-2,
    .grid-3,
    .grid-4 {
        grid-template-columns: 1fr;
    }
}

/* ========================================
   FLEX UTILITIES
   ======================================== */

.flex {
    display: flex;
}

.flex-center {
    display: flex;
    align-items: center;
    justify-content: center;
}

.flex-between {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.flex-column {
    display: flex;
    flex-direction: column;
}

.flex-wrap {
    flex-wrap: wrap;
}

.gap-sm { gap: var(--space-sm); }
.gap-md { gap: var(--space-md); }
.gap-lg { gap: var(--space-lg); }

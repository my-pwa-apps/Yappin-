{
  "rules": {
    // Users: all authenticated users can read all profiles, can only write own profile
    "users": {
      ".read": "auth != null",
      "$uid": {
        ".write": "auth != null && auth.uid === $uid",
        "inviteCodes": {
          ".read": "auth != null && auth.uid === $uid",
          ".write": "auth != null && auth.uid === $uid"
        },
        "privacy": {
          ".read": "auth != null",
          ".write": "auth != null && auth.uid === $uid"
        }
      }
    },
    
    // Usernames: readable by EVERYONE (needed for signup availability check), writable only when creating new username
    "usernames": {
      "$username": {
        ".read": true,
        ".write": "auth != null && (!data.exists() || data.val() === auth.uid)"
      }
    },
    
    // Yaps: readable by all authenticated users, writable by owner
    "yaps": {
      "$yapId": {
        ".read": "auth != null",
        ".write": "auth != null && (data.child('uid').val() === auth.uid || !data.exists())"
      }
    },
    
    // User Yaps: readable by all authenticated users, writable by owner
    "userYaps": {
      ".read": "auth != null",
      "$uid": {
        ".indexOn": ["timestamp"],
        "$yapId": {
          ".write": "auth != null && auth.uid === $uid"
        }
      }
    },
    
    // Likes: readable by all authenticated users, writable by like owner or yap owner (for deletion)
    "likes": {
      "$yapId": {
        ".read": "auth != null",
        "$uid": {
          ".write": "auth != null && (auth.uid === $uid || root.child('yaps').child($yapId).child('uid').val() === auth.uid)"
        }
      }
    },
    
    // User Likes: readable by all, writable by owner
    "userLikes": {
      "$uid": {
        "$yapId": {
          ".read": "auth != null",
          ".write": "auth != null && auth.uid === $uid"
        }
      }
    },
    
    // Reyaps: readable by all authenticated users, writable by reyap owner or yap owner (for deletion)
    "reyaps": {
      "$yapId": {
        ".read": "auth != null",
        "$uid": {
          ".write": "auth != null && (auth.uid === $uid || root.child('yaps').child($yapId).child('uid').val() === auth.uid)"
        }
      }
    },
    
    // User Reyaps: readable by all, writable by owner
    "userReyaps": {
      "$uid": {
        "$yapId": {
          ".read": "auth != null",
          ".write": "auth != null && auth.uid === $uid"
        }
      }
    },
    
    // Following: readable by all authenticated users, writable by owner
    "following": {
      ".read": "auth != null",
      "$uid": {
        ".write": "auth != null && auth.uid === $uid"
      }
    },
    
    // Followers: readable by all, writable by the follower
    "followers": {
      "$uid": {
        "$followerUid": {
          ".read": "auth != null",
          ".write": "auth != null && auth.uid === $followerUid"
        }
      }
    },
    
    // Notifications: readable by owner, writable by anyone authenticated
    "notifications": {
      "$uid": {
        ".read": "auth != null && auth.uid === $uid",
        ".write": "auth != null"
      }
    },
    
    // Hashtags: readable by all, writable by authenticated users
    "hashtags": {
      ".read": "auth != null",
      ".write": "auth != null"
    },
    
    // Trending: readable by all, writable by authenticated users
    "trending": {
      ".read": "auth != null",
      ".write": "auth != null"
    },
    
    // User Bookmarks: readable/writable by owner only
    "userBookmarks": {
      "$uid": {
        ".read": "auth != null && auth.uid === $uid",
        ".write": "auth != null && auth.uid === $uid"
      }
    },
    
    // Invite Codes: individual codes readable by anyone for validation, list readable by authenticated users only
    "inviteCodes": {
      ".indexOn": ["createdBy", "used"],
      "$code": {
        ".read": true,
        ".write": "auth != null"
      }
    },
    
    // Follow Requests: readable by recipient, writable by requester or recipient
    "followRequests": {
      "$uid": {
        ".read": "auth != null && auth.uid === $uid",
        "$requesterId": {
          ".write": "auth != null && (auth.uid === $requesterId || auth.uid === $uid)"
        }
      }
    }
  }
}
